# Copyright 2025 Canonical Ltd.
# See LICENSE file for licensing details.

[project]
name = "kafkacl"
version = "0.0.1"
description = "Shared and reusable code for Kafka Connect integrator charms."
readme = "README.md"
license = "Apache-2.0"
authors = [
    {name = "Canonical Data Platform", email = "data-platform@lists.launchpad.net"}
]
classifiers = [
 "Development Status :: 3 - Alpha",
 "Intended Audience :: Developers",
 "Intended Audience :: System Administrators",
 "Operating System :: POSIX :: Linux",
]
requires-python = ">=3.10,<4.0"

[project.urls]
homepage = "https://github.com/canonical/kafkacl"
repository = "https://github.com/canonical/kafkacl"
"Bug Tracker" = "https://github.com/canonical/kafkacl/issues"
"Matrix" = "https://matrix.to/#/#charmhub-data-platform:ubuntu.com"
"Contribute" = "https://github.com/canonical/kafkacl/blob/main/CONTRIBUTING.md"

[tool.pytest.ini_options]
minversion = "6.0"
log_cli_level = "INFO"
asyncio_mode = "auto"

# Formatting tools configuration
[tool.black]
line-length = 99
target-version = ["py310"]

[tool.isort]
profile = "black"

[tool.poetry]
requires-poetry = ">=2.0.0"
package-mode = true
packages = [
    {include = "kafkacl"},
]
exclude = ["kafkacl/charmcraft.yaml"]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
ops = ">=2.17.0"
tenacity = ">=8.0.1"
pure-sasl = ">=0.6.2"
jsonschema = ">=4.10"
cryptography = ">42.0.0"
pydantic = "^1.10, <2"
pyyaml = "^6.0.1"
requests = "^2.32.3"

[build-system]
requires = ["poetry-core>=2.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.charm-libs.dependencies]
pydantic = "^1.10, <2"

[tool.poetry.group.fmt]
optional = true

[tool.poetry.group.fmt.dependencies]
black = "^22.3.0"
ruff = ">=0.1.0"
pyright = "^1.1.300"

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
black = "^22.3.0"
ruff = ">=0.1.0"
codespell = ">=2.2.2"
pyright = "^1.1.301"

[tool.poetry.group.unit]
optional = true

[tool.poetry.group.unit.dependencies]
pytest = ">=7.2"
coverage = { extras = ["toml"], version = ">7.0" }
pytest-mock = "^3.11.1"
ops = { version = ">=2.17.0", extras = ["testing"] }

[tool.poetry.group.integration]
optional = true

[tool.poetry.group.integration.dependencies]
pytest = ">=7.2"
juju = "^3.6.0"
coverage = { extras = ["toml"], version = ">7.0" }
pytest-operator = ">0.20"
tenacity = ">=7.0"
pure-sasl = ">=0.5"
requests = ">2.25"
kafka-python-ng = ">=2.0"

[tool.poetry.group.format.dependencies]
pyright = "^1.1.301"

[tool.ruff]
line-length = 99
lint.select = ["E", "W", "F", "C", "N", "D", "I001"]
lint.extend-ignore = [
  "D203",
  "D204",
  "D213",
  "D215",
  "D400",
  "D401",
  "D404",
  "D406",
  "D407",
  "D408",
  "D409",
  "D413",
]
lint.ignore = ["E501", "D107"]
extend-exclude = ["__pycache__", "*.egg_info", "tests/app_charm/lib", "kafkacl/lib/charms/"]
lint.per-file-ignores = { "tests/*" = ["D100", "D101", "D102", "D103", "D104", "E999"] }
target-version = "py310"
src = ["kafkacl", "tests"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.pyright]
include = ["kafkacl"]
exclude = ["kafkacl/lib/"]
pythonVersion = "3.10"
pythonPlatform = "All"
typeCheckingMode = "basic"
reportIncompatibleMethodOverride = false
reportImportCycles = false
reportMissingModuleSource = true
stubPath = ""
