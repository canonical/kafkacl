# Copyright 2025 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
env_list = lint, unit

[vars]
src_path = {tox_root}/kafkacl
tests_path = {tox_root}/tests
lib_path = {[vars]src_path}/lib
all_path = {[vars]src_path} {[vars]tests_path}


[testenv]
allowlist_externals =
    /bin/bash
    poetry
set_env =
    PYTHONPATH = {[vars]src_path}
    PYTHONBREAKPOINT=ipdb.set_trace
    PY_COLORS=1
    charm: TEST_FILE=test_charm.py

pass_env =
    PYTHONPATH
    CHARM_BUILD_DIR
    MODEL_SETTINGS
deps =
    poetry

[testenv:format]
description = Apply coding style standards to code
commands =
    poetry install --only fmt
    poetry run ruff check --fix {[vars]all_path}
    poetry run black {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
commands =
    poetry install --only lint
    poetry run codespell {tox_root} \
        --skip {tox_root}/.git \
        --skip {tox_root}/.tox \
        --skip {tox_root}/build \
        --skip {[vars]lib_path} \
        --skip {tox_root}/tests/app_charm/lib \
        --skip {tox_root}/venv \
        --skip {tox_root}/poetry.lock

    poetry run ruff check {[vars]all_path}
    poetry run black --check --diff {[vars]all_path}

    poetry install --with lint
    poetry run pyright

[testenv:unit]
description = Run unit tests
set_env =
    {[testenv]set_env}
    PYTHONPATH = {[vars]src_path}:{[vars]tests_path}/app_charm/src
commands =
    poetry install --with unit
    poetry run coverage run --source={[vars]src_path} \
        -m pytest -vv --tb native -s {posargs} {[vars]tests_path}/unit
    poetry run coverage report

[testenv:integration]
description = Run integration tests
pass_env =
    {[testenv]pass_env}
    CI
    CI_PACKED_CHARMS
commands =
    poetry build
    poetry install --with integration
    poetry run pytest -vv --tb native --log-cli-level=INFO -s {posargs} {[vars]tests_path}/integration/

[testenv:integration-{charm}]
description = Run integration tests
set_env =
    {[testenv]set_env}
    # Workaround for https://github.com/python-poetry/poetry/issues/6958
    POETRY_INSTALLER_PARALLEL = false
pass_env =
    {[testenv]pass_env}
    CI
commands =
    poetry build
    poetry install --with integration
    poetry run pytest -vv --tb native --log-cli-level=INFO -s {posargs} {[vars]tests_path}/integration/{env:TEST_FILE}

[testenv:build]
description = Builds the package
commands_pre =
    poetry install
commands =
    rm -rf ./dist/
    poetry lock
    poetry build
